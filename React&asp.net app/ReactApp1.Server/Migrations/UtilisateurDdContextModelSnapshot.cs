// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactApp1.Server.Model;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(UtilisateurDdContext))]
    partial class UtilisateurDdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReactApp1.Server.Model.Departement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("NomDep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Depertements");
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Employe", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilisateurId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Anner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idEmp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mois")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("note1")
                        .HasColumnType("int");

                    b.Property<int>("note2")
                        .HasColumnType("int");

                    b.Property<int>("note3")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Utilisateur", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Motpass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Employe", b =>
                {
                    b.HasOne("ReactApp1.Server.Model.Departement", null)
                        .WithMany("Employes")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Utilisateur", b =>
                {
                    b.HasOne("ReactApp1.Server.Model.Departement", null)
                        .WithMany("Utilisateurs")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReactApp1.Server.Model.Departement", b =>
                {
                    b.Navigation("Employes");

                    b.Navigation("Utilisateurs");
                });
#pragma warning restore 612, 618
        }
    }
}
